{"version":3,"sources":["Redux/Phonebook/pb-operations.js","Redux/Auth/auth-selectors.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Navigation.js","Components/AuthNav.js","Components/UserMenu/UserMenu.js","Components/AppBar/AppBar.js","Components/App/App.js","Redux/Phonebook/pb-redusers.js","Redux/Auth/auth-slice.js","Redux/store.js","index.js","Components/AppBar/AppBar.module.css","Redux/Auth/auth-operation.js","Redux/Phonebook/pb-actions.js"],"names":["fetchContactsAction","createAsyncThunk","a","axios","get","console","log","massege","addContactsAction","contact","post","deleteContactsAction","id","delete","authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetching","isFetching","PrivateRoute","component","redirectTo","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","Navbar","Nav","exact","className","s","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","type","onClick","logOut","AppBar","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","App","useEffect","fetchCurrentUser","fallback","color","height","width","timeout","display","loader","path","entities","createReducer","fulfilled","_state","action","payload","data","filter","isLoading","pending","rejected","error","changeFilter","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","registration","logIn","_action","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReduser","phonebook","phonebookReduser","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","defaults","baseURL","headers","common","Authorization","credentials","rejectWithValue","_","thunkAPI","getState","persistedToken","createAction"],"mappings":"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","file":"static/js/main.206f7b28.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsAction = createAsyncThunk('contacts/fetchContacts', async () => {\r\n    try {\r\n        return await axios.get('/contacts');\r\n    } catch (err) {\r\n        console.log(err.massege);\r\n    }\r\n});\r\n\r\nexport const addContactsAction = createAsyncThunk('contacts/addContacts', async contact => {\r\n    try {\r\n        return await axios.post('/contacts', contact);\r\n    } catch (err) {\r\n        console.log(err.massege);\r\n    }\r\n});\r\n\r\nexport const deleteContactsAction = createAsyncThunk('contacts/deleteContacts', async id => {\r\n    try {\r\n        await axios.delete(`/contacts/${id}`);\r\n        return id;\r\n    } catch (err) {\r\n        console.log(err.massege);\r\n    }\r\n});","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\nconst getIsFetching = state => state.auth.isFetching;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n    getIsFetching,\r\n};\r\nexport default authSelectors;","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'Redux/Auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n    component: Component,\r\n    redirectTo = '/',\r\n    children,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return <Route {...routeProps}>\r\n        {isLoggedIn ? children : <Redirect to={redirectTo} /> }\r\n    </Route>\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'Redux/Auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n    restricted = false,\r\n    redirectTo = '/',\r\n    children,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return <Route {...routeProps}>\r\n        {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authSelectors from '../Redux/Auth/auth-selectors';\r\nimport s from '../Components/AppBar/AppBar.module.css';\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <Navbar>\r\n            <Nav>\r\n                <NavLink exact to='/' className={s.link} activeClassName={s.activeLink}>\r\n                    Главная страница\r\n                </NavLink>\r\n                {isLoggedIn && (\r\n                    <NavLink to='/contacts' className={s.link} activeClassName={s.activeLink}>\r\n                        Контакты\r\n                    </NavLink>\r\n                )}\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport s from '../Components/AppBar/AppBar.module.css';\r\n\r\nexport default function AuthNav() {\r\n    return (\r\n        <Navbar>\r\n            <Nav>\r\n                <NavLink to=\"/register\" className={s.link} activeClassName={s.activeLink}>\r\n                    Регистрация\r\n                </NavLink>\r\n                <NavLink to=\"/login\" className={s.link} activeClassName={s.activeLink}>\r\n                    Войти\r\n                </NavLink>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport authSelectors from '../../Redux/Auth/auth-selectors';\nimport { logOut } from '../../Redux/Auth/auth-operation';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <Navbar>\n      <p>Добро пожаловать, {name}</p>\n      <button className=\"btn-logout\" type=\"button\" onClick={() => dispatch(logOut())}>Выйти</button>\n    </Navbar>\n  );\n};\n\n","import { useSelector } from 'react-redux';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport authSelectors from '../../Redux/Auth/auth-selectors';\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <Navbar>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </Navbar>\r\n    );\r\n};\r\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\nimport AppBar from '../AppBar/AppBar';\nimport { fetchCurrentUser } from '../../Redux/Auth/auth-operation';\nimport authSelectors from '../../Redux/Auth/auth-selectors';\nimport s from '../AppBar/AppBar.module.css';\n\nconst AsyncHomeView = lazy(() => import('../../Views/HomeView.js'));\nconst AsyncLoginView = lazy(() => import('../../Views/LoginView.js'));\nconst AsyncRegisterView = lazy(() => import('../../Views/RegisterView.js'));\nconst AsyncContactsView = lazy(() => import('../../Views/ContactsView.js'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n            display=\"flex\"\n            justify-content=\"center\"\n            className={s.loader}\n          />} >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <AsyncHomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <AsyncRegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <AsyncLoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <AsyncContactsView />\n          </PrivateRoute>\n        </Switch>\n        </Suspense>\n    </div>\n  ): null;\n};\n\n\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./pb-actions\";\r\nimport { fetchContactsAction, addContactsAction, deleteContactsAction } from \"./pb-operations\";\r\n\r\nconst entities = createReducer([], {\r\n    [fetchContactsAction.fulfilled]: (_state, action) => action.payload.data,\r\n    [addContactsAction.fulfilled]: (state, { payload }) => [payload.data, ...state],\r\n    [deleteContactsAction.fulfilled]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContactsAction.pending]: () => true,\r\n    [fetchContactsAction.fulfilled]: () => false,\r\n    [fetchContactsAction.rejected]: () => false,\r\n    [deleteContactsAction.fulfilled]: () => false,\r\n    [deleteContactsAction.pending]: () => true,\r\n    [deleteContactsAction.rejected]: () => false,\r\n    [addContactsAction.fulfilled]: () => false,\r\n    [addContactsAction.pending]: () => true,\r\n    [addContactsAction.rejected]: () => false,\r\n});\r\n \r\nconst error = createReducer(null, {\r\n    [fetchContactsAction.rejected]: (_state, action) => action.payload, \r\n    [fetchContactsAction.pending]: () => null,\r\n    [addContactsAction.pending]: () => null,\r\n    [addContactsAction.rejected]: (_state, { payload }) => payload,\r\n    [deleteContactsAction.pending]: () => null,\r\n    [deleteContactsAction.rejected]: (_state, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ filter, error, isLoading, entities });","import { createSlice } from '@reduxjs/toolkit';\r\nimport { registration, logOut, logIn, fetchCurrentUser } from './auth-operation';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [registration.fulfilled](state, { payload }) {\r\n            state.user = payload.user;\r\n            state.token = payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, { payload }) {\r\n            state.user = payload.user;\r\n            state.token = payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, _action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.pending](state) {\r\n            state.isFetching = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, { payload }) {\r\n            state.user = payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetching = false;\r\n        },\r\n        [fetchCurrentUser.rejected](state) {\r\n            state.isFetching = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReduser from './Phonebook/pb-redusers';\r\nimport authReduser from './Auth/auth-slice';\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReduser),\r\n        phonebook: phonebookReduser,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport  App  from './Components/App/App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__qTUE8\",\"link\":\"AppBar_link__23l6O\",\"activeLink\":\"AppBar_activeLink__2tUOU\",\"loader\":\"AppBar_loader__2uRJy\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (err) {\r\n        return rejectWithValue(err.data);\r\n    }\r\n});\r\n\r\nexport const registration = createAsyncThunk('auth/registration', async (credentials, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (err) {\r\n        return rejectWithValue(err.data);\r\n    }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async (_, { rejectWithValue }) => {\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n    } catch (err) {\r\n        return rejectWithValue(err.data);\r\n    }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n        return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n        const { data } = await axios.post('/users/current');\r\n        return data;\r\n    } catch (err) {\r\n        return thunkAPI.rejectWithValue(err.data);\r\n    }\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');"],"sourceRoot":""}